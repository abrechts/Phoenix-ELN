<Application x:Class="Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CustomControls;component/Resources/SpecialIcons.xaml"/>
                <ResourceDictionary Source="/CustomControls;component/Resources/StandardIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="ProtocolItemBorder" Color="#FFD9D9D9"/>
            <SolidColorBrush x:Key="ActiveEditBackground" Color="#FFDEFFFA"/>

            <SolidColorBrush x:Key="DialogTitleForeground" Color="#FF0049B9"/>

            <!-- Used for selected tabs -->
            <LinearGradientBrush x:Key="OrangeGradient" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="whitesmoke" Offset="0.00"/>
                <GradientStop Color="#FFFFB976" Offset="0.98"/>
                <GradientStop Color="#FFFCD888" Offset="0.85" />
            </LinearGradientBrush>

            <!-- "Unselected tab item header background"-->
            <LinearGradientBrush x:Key="LightBlueGradient"
                StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="WhiteSmoke" Offset="0.0"/>
                <GradientStop Color="LightCyan" Offset="0.45"/>
                <GradientStop Color="LightBlue" Offset="1"/>
            </LinearGradientBrush>

            <!--Global rounded buttons style-->
            <Style TargetType="Button">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="6"/>
                    </Style>
                </Style.Resources>
            </Style>

            <!--Global custom ToolTip style-->
            <Style TargetType="ToolTip">
                <Setter Property="ToolTipService.HasDropShadow" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border Background="#FF686868" CornerRadius="6" BorderThickness="1" BorderBrush="#FF9A9A9A" 
                               TextBlock.FontStyle="Normal" TextBlock.Foreground="white">
                                <ContentPresenter Margin="8,6" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Custom menu item for context menus without right shortcut area (no submenus possible)-->
            <ControlTemplate x:Key="ContextMenuItem" TargetType="{x:Type MenuItem}">
                <Border Name="Border" SnapsToDevicePixels="True">
                    <Grid Margin="0,2,0,2" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--Icon area-->
                        <ContentPresenter
                     Name="Icon"
                     Margin="6,1,6,1"
                     Width="16" Height="16" 
                     VerticalAlignment="Center"
                     ContentSource="Icon">
                        </ContentPresenter>

                        <!--Checkbox area-->
                        <Border Name="Check"
                             Width="13" Height="13" 
                             Visibility="Collapsed"
                             Margin="6,0,6,0" 
                             Background="White"
                             BorderThickness="1"
                             BorderBrush="Gray">
                            <Path Name="CheckMark"
                                 Width="7" Height="7" 
                                 Visibility="Hidden" 
                                 SnapsToDevicePixels="False" 
                                 Stroke="Black" StrokeThickness="2"
                                 Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                        </Border>

                        <!--Header area-->
                        <ContentPresenter Name="HeaderHost" 
                     Grid.Column="1" ContentSource="Header" 
                     Margin="6,1,10,0" RecognizesAccessKey="True">
                        </ContentPresenter>

                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsCheckable" Value="true">
                        <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>


            <!-- Custom rounded tabitem control template-->
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border
                                    Background="lightskyblue"
                                    Name="Border"
                                    BorderBrush="gray" 
                                    BorderThickness="1,1,1,0" 
                                    Padding="1,2,2,2"
                                    CornerRadius="8,0,0,0">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="2,0,0,0"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource OrangeGradient}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" 
                            Property="Background" Value="{StaticResource LightBlueGradient}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--Experiment navigation TreeViewItem template-->

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15" Height="13" Margin="0,2,0,0" Background="Transparent">
                                <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center"  
                                   Margin="1,1,1,1" Fill="#444" Data="M 4 0 L 8 4 L 4 8 Z"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Data" TargetName="ExpandPath"  Value="M 0 4 L 8 4 L 4 8 Z"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ExperimentTreeViewItem" TargetType="TreeViewItem">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ToggleButton x:Name="Expander" Grid.Column="0" Style="{StaticResource ExpandCollapseToggleStyle}" 
                       IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" 
                       ClickMode="Press" VerticalAlignment="Top" />
                    <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}" Padding="0,0,0,0" CornerRadius="4">
                        <ContentPresenter x:Name="PART_Header" ContentSource="Header" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                </Grid>

                <ControlTemplate.Triggers>

                    <Trigger Property="IsExpanded" Value="false">
                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="HasHeader" Value="false"/>
                            <Condition Property="Width" Value="Auto"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="HasHeader" Value="false"/>
                            <Condition Property="Height" Value="Auto"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>

                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" Value="#FFC4FAFF"/>
                    </Trigger>

                </ControlTemplate.Triggers>

            </ControlTemplate>

            <!--Toolbar without grip and overflow button: 1) Prerequisites -->

            <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFBFF" Offset="0.7"/>
                <GradientStop Color="#FFA5A5A5" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFBFF" Offset="0.5"/>
                <GradientStop Color="#F7F7F7" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="3,3,3,3"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="CornerRadius" Value="0,0,0,0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <!--Toolbar without grip and overflow button: 2) Actual style to use... -->

            <Style x:Key="ToolBarWithoutOverflowBarStyle" TargetType="{x:Type ToolBar}">
                <Setter Property="Background" Value="white"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                                <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}" Margin="0">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                    <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                                    <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            
            <!-- Toolbar button style -->
            <Style x:Key="ToggleButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border 
                           x:Name="Border"  
                           BorderThickness="1"
                           Background="White"
                           BorderBrush="Transparent">
                                <ContentPresenter 
                                Name="MyPresenter"
                                 Margin="2"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                             RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="lightblue" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="dimgray" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>-->
                                <Trigger Property="CheckBox.IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="lightcyan" />
                                    <!--<Setter TargetName="Border" Property="BorderBrush" Value="lightblue" />-->
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="true">
                                    <Setter TargetName="Border" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Horizonal line fading to the right-->
            <Rectangle x:Key="HorizFadingLineBlue" Height="1" VerticalAlignment="Top" x:Shared="false">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        <GradientStop Color="#FF0941CC" Offset="0" />
                        <GradientStop Color="White" Offset="1" />
                        <GradientStop Color="White" Offset="0.902" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>

        </ResourceDictionary>

    </Application.Resources>
</Application>
